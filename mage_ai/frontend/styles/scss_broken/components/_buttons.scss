@import "../abstracts/variables";
@import "../abstracts/mixins";
@import "../base/_typography";

@mixin button-shared($props) {
  @if map-has-key($props, 'asLink') and map-get($props, 'asLink') {
    @include transition-fast();
  } @else {
    @include transition();
  }
  @include text-style($props);

  @include outline-hover((
    borderColor: $font-color-text-inverted,
    outlineColor: if(map-has-key($props, 'primary') and map-get($props, 'primary'),
                    $button-outline-color-primary-hover,
                    if(map-has-key($props, 'secondary') and map-get($props, 'secondary'),
                    $button-outline-color-secondary-hover,
                    if(map-has-key($props, 'asLink') and map-get($props, 'asLink') or map-has-key($props, 'basic') and map-get($props, 'basic'),
                      $button-outline-color-basic-hover,
                    $button-outline-color-base-hover))),
    outlineOffset: if(map-has-key($props, 'grouped') and map-get($props, 'grouped'), $border-outline-offset, null)
  ));

  @if map-has-key($props, 'grouped') and map-get($props, 'grouped') {
    border: none;
  }

  @if not map-has-key($props, 'grouped') and map-get($props, 'grouped') == false and map-has-key($props, 'basic') and map-get($props, 'basic') {
    @include borders($props);
  }

  border-color: if(map-has-key($props, 'primary') and map-get($props, 'primary'),
                $button-border-color-primary,
                if(map-has-key($props, 'secondary') and map-get($props, 'secondary'),
                $button-border-color-secondary,
                if(map-has-key($props, 'basic') and map-get($props, 'basic'),
                  $button-border-color-basic,
                $button-border-color-base)));


  border-radius: if(map-has-key($props, 'asLink') and map-get($props, 'asLink'), $border-radius-sm, $border-radius-base);
  color: if(map-has-key($props, 'primary') and map-get($props, 'primary') or map-has-key($props, 'secondary') and map-get($props, 'secondary'), $font-color-text-inverted, $font-color-text-base);
  font-style: $font-style-base;
  font-family: if(map-has-key($props, 'primary') and map-get($props, 'primary') or map-has-key($props, 'secondary') and map-get($props, 'secondary'), $font-family-base-bold, $font-family-base-semiBold);
  font-weight: if(map-has-key($props, 'primary') and map-get($props, 'primary') or map-has-key($props, 'secondary') and map-get($props, 'secondary'), $font-weight-bold, $font-weight-semiBold);
  line-height: $font-lineHeight-base;
  background-color: if(map-has-key($props, 'asLink') and map-get($props, 'asLink'), "transparent",
                      if(map-has-key($props, 'primary') and map-get($props, 'primary'), $button-primary-background,
                      if(map-has-key($props, 'secondary') and map-get($props, 'secondary'), $button-secondary-background,
                      if(map-has-key($props, 'basic') and map-get($props, 'basic'), $button-basic-background,
                      $button-base-background))));

  &:hover {
    cursor: pointer;
    background-color: if(map-has-key($props, 'primary') and map-get($props, 'primary'),
                        $button-primary-hover-background,
                        if(map-has-key($props, 'secondary') and map-get($props, 'secondary'),
                        $button-secondary-hover-background,
                        if(map-has-key($props, 'basic') and map-get($props, 'basic'),
                        $button-basic-hover-background,
                        $button-base-hover-background)));
    border-color: if(map-has-key($props, 'primary') and map-get($props, 'primary'),
                $button-border-color-primary-hover,
                if(map-has-key($props, 'secondary') and map-get($props, 'secondary'),
                $button-border-color-secondary-hover,
                if(map-has-key($props, 'asLink') and map-get($props, 'asLink') or map-has-key($props, 'basic') and map-get($props, 'basic'),
                  $button-border-color-basic-hover,
                $button-border-color-base-hover)));
  }
}

.button-base {
  $props: (); // Initialize an empty map
  @include button-shared($props);
  font-size: $font-size-base;
  padding: if(map-has-key($props, 'grouped') and map-get($props, 'grouped'), 0, if(map-has-key($props, 'asLink') and map-get($props, 'asLink'), $button-padding-xs, $button-padding-base));
}

.button-sm {
  $props: (); // Initialize an empty map
  @include button-shared($props);
  font-size: $font-size-sm;
  padding: if(map-has-key($props, 'grouped') and map-get($props, 'grouped'), 0, $button-padding-sm);
}
